root = true
# Entfernen Sie die folgende Zeile, wenn Sie EDITORCONFIG-Einstellungen von höheren Verzeichnissen vererben möchten.

# C#-Dateien
[*.cs]

#### Wichtige EditorConfig-Optionen ####

# Einzüge und Abstände
indent_size = 2
indent_style = space
tab_width = 2

# Einstellungen für neue Zeilen
end_of_line = crlf
insert_final_newline = false

#### .NET-Codierungskonventionen ####

# Using-Direktiven organisieren
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = false

# this.- und Me.-Einstellungen
dotnet_style_qualification_for_event = false:warning
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_property = false:warning

# Einstellungen für Sprachschlüsselwörter und BCL-Typen
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Einstellungen für Klammern
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:none
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:none
dotnet_style_parentheses_in_other_operators = never_if_unnecessary
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:none

# Einstellungen für Modifizierer
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion

# Einstellungen für Ausdrucksebene
dotnet_style_coalesce_expression = true
dotnet_style_collection_initializer = true
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_namespace_match_folder = true
dotnet_style_null_propagation = true
dotnet_style_object_initializer = true
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true
dotnet_style_prefer_compound_assignment = true
dotnet_style_prefer_conditional_expression_over_assignment = true
dotnet_style_prefer_conditional_expression_over_return = true
dotnet_style_prefer_inferred_anonymous_type_member_names = true
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
dotnet_style_prefer_simplified_boolean_expressions = true
dotnet_style_prefer_simplified_interpolation = true

# Einstellungen für Felder
dotnet_style_readonly_field = true

# Einstellungen für Parameter
dotnet_code_quality_unused_parameters = all

# Unterdrückungseinstellungen
dotnet_remove_unnecessary_suppression_exclusions = none

# Einstellungen für neue Zeilen
dotnet_style_allow_multiple_blank_lines_experimental = true
dotnet_style_allow_statement_immediately_after_block_experimental = true

#### C#-Codierungskonventionen ####

# Var-Einstellungen
csharp_style_var_elsewhere = true:suggestion
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion

# Ausdruckskörpermember
csharp_style_expression_bodied_accessors = true:suggestion
csharp_style_expression_bodied_constructors = true:none
csharp_style_expression_bodied_indexers = true
csharp_style_expression_bodied_lambdas = true
csharp_style_expression_bodied_local_functions = false
csharp_style_expression_bodied_methods = true:none
csharp_style_expression_bodied_operators = true
csharp_style_expression_bodied_properties = true:suggestion

# Einstellungen für den Musterabgleich
csharp_style_pattern_matching_over_as_with_null_check = true
csharp_style_pattern_matching_over_is_with_cast_check = true
csharp_style_prefer_not_pattern = true
csharp_style_prefer_pattern_matching = true
csharp_style_prefer_switch_expression = true

# Einstellungen für NULL-Überprüfung
csharp_style_conditional_delegate_call = true

# Einstellungen für Modifizierer
csharp_prefer_static_local_function = true
csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async:suggestion

# Einstellungen für Codeblöcke
csharp_prefer_braces = false:suggestion
csharp_prefer_simple_using_statement = true
csharp_style_namespace_declarations = block_scoped:suggestion

# Einstellungen für Ausdrucksebene
csharp_prefer_simple_default_expression = true
csharp_style_deconstructed_variable_declaration = true
csharp_style_implicit_object_creation_when_type_is_apparent = true
csharp_style_inlined_variable_declaration = true
csharp_style_pattern_local_over_anonymous_function = true
csharp_style_prefer_index_operator = true
csharp_style_prefer_null_check_over_type_check = true
csharp_style_prefer_range_operator = true
csharp_style_throw_expression = true
csharp_style_unused_value_assignment_preference = discard_variable
csharp_style_unused_value_expression_statement_preference = discard_variable

# Einstellungen für using-Anweisungen

# Einstellungen für neue Zeilen
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true
csharp_style_allow_embedded_statements_on_same_line_experimental = true

#### C#-Formatierungsregeln ####

# Einstellungen für neue Zeilen
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = none
csharp_new_line_between_query_expression_clauses = true

# Einstellungen für Einrückung
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = flush_left
csharp_indent_switch_labels = true

# Einstellungen für Abstände
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Umbrucheinstellungen
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

#### Benennungsstile ####

# Benennungsregeln

dotnet_naming_rule.schnittstelle_should_be_beginnt_mit_i.severity = suggestion
dotnet_naming_rule.schnittstelle_should_be_beginnt_mit_i.symbols = schnittstelle
dotnet_naming_rule.schnittstelle_should_be_beginnt_mit_i.style = beginnt_mit_i

dotnet_naming_rule.typen_should_be_pascal_schreibweise.severity = suggestion
dotnet_naming_rule.typen_should_be_pascal_schreibweise.symbols = typen
dotnet_naming_rule.typen_should_be_pascal_schreibweise.style = pascal_schreibweise

dotnet_naming_rule.nicht_feldmember_should_be_pascal_schreibweise.severity = suggestion
dotnet_naming_rule.nicht_feldmember_should_be_pascal_schreibweise.symbols = nicht_feldmember
dotnet_naming_rule.nicht_feldmember_should_be_pascal_schreibweise.style = pascal_schreibweise

# Symbolspezifikationen

dotnet_naming_symbols.schnittstelle.applicable_kinds = interface
dotnet_naming_symbols.schnittstelle.applicable_accessibilities = public, internal, private, protected, protected_internal
dotnet_naming_symbols.schnittstelle.required_modifiers = 

dotnet_naming_symbols.typen.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.typen.applicable_accessibilities = public, internal, private, protected, protected_internal
dotnet_naming_symbols.typen.required_modifiers = 

dotnet_naming_symbols.nicht_feldmember.applicable_kinds = property, event, method
dotnet_naming_symbols.nicht_feldmember.applicable_accessibilities = public, internal, private, protected, protected_internal
dotnet_naming_symbols.nicht_feldmember.required_modifiers = 

# Benennungsstile

dotnet_naming_style.pascal_schreibweise.required_prefix = 
dotnet_naming_style.pascal_schreibweise.required_suffix = 
dotnet_naming_style.pascal_schreibweise.word_separator = 
dotnet_naming_style.pascal_schreibweise.capitalization = pascal_case

dotnet_naming_style.beginnt_mit_i.required_prefix = I
dotnet_naming_style.beginnt_mit_i.required_suffix = 
dotnet_naming_style.beginnt_mit_i.word_separator = 
dotnet_naming_style.beginnt_mit_i.capitalization = pascal_case

# Microsoft .NET properties
dotnet_naming_rule.constants_rule.import_to_resharper = as_predefined
dotnet_naming_rule.constants_rule.severity = suggestion
dotnet_naming_rule.constants_rule.style = all_upper_style
dotnet_naming_rule.constants_rule.symbols = constants_symbols
dotnet_naming_rule.event_rule.import_to_resharper = as_predefined
dotnet_naming_rule.event_rule.severity = suggestion
dotnet_naming_rule.event_rule.style = pascal_schreibweise
dotnet_naming_rule.event_rule.symbols = event_symbols
dotnet_naming_rule.interfaces_rule.import_to_resharper = as_predefined
dotnet_naming_rule.interfaces_rule.severity = suggestion
dotnet_naming_rule.interfaces_rule.style = beginnt_mit_i
dotnet_naming_rule.interfaces_rule.symbols = interfaces_symbols
dotnet_naming_rule.method_rule.import_to_resharper = as_predefined
dotnet_naming_rule.method_rule.severity = suggestion
dotnet_naming_rule.method_rule.style = pascal_schreibweise
dotnet_naming_rule.method_rule.symbols = method_symbols
dotnet_naming_rule.nicht_feldmember_should_be_pascal_schreibweise.import_to_resharper = True
dotnet_naming_rule.nicht_feldmember_should_be_pascal_schreibweise.resharper_description = nicht_feldmember_should_be_pascal_schreibweise
dotnet_naming_rule.nicht_feldmember_should_be_pascal_schreibweise.resharper_guid = 4828e3dc-fd81-479a-b775-6f875a177f73
dotnet_naming_rule.private_constants_rule.import_to_resharper = as_predefined
dotnet_naming_rule.private_constants_rule.severity = suggestion
dotnet_naming_rule.private_constants_rule.style = all_upper_style
dotnet_naming_rule.private_constants_rule.symbols = private_constants_symbols
dotnet_naming_rule.property_rule.import_to_resharper = as_predefined
dotnet_naming_rule.property_rule.severity = suggestion
dotnet_naming_rule.property_rule.style = pascal_schreibweise
dotnet_naming_rule.property_rule.symbols = property_symbols
dotnet_naming_rule.public_fields_rule.import_to_resharper = as_predefined
dotnet_naming_rule.public_fields_rule.resharper_style = aaBb, AaBb
dotnet_naming_rule.public_fields_rule.severity = suggestion
dotnet_naming_rule.public_fields_rule.style = lower_camel_case_style
dotnet_naming_rule.public_fields_rule.symbols = public_fields_symbols
dotnet_naming_rule.schnittstelle_should_be_beginnt_mit_i.import_to_resharper = True
dotnet_naming_rule.schnittstelle_should_be_beginnt_mit_i.resharper_description = schnittstelle_should_be_beginnt_mit_i
dotnet_naming_rule.schnittstelle_should_be_beginnt_mit_i.resharper_guid = 2fcb2252-dbd4-4f03-a622-1bc90ada26f0
dotnet_naming_rule.static_readonly_rule.import_to_resharper = as_predefined
dotnet_naming_rule.static_readonly_rule.severity = suggestion
dotnet_naming_rule.static_readonly_rule.style = pascal_schreibweise
dotnet_naming_rule.static_readonly_rule.symbols = static_readonly_symbols
dotnet_naming_rule.typen_should_be_pascal_schreibweise.import_to_resharper = True
dotnet_naming_rule.typen_should_be_pascal_schreibweise.resharper_description = typen_should_be_pascal_schreibweise
dotnet_naming_rule.typen_should_be_pascal_schreibweise.resharper_guid = 427a91a8-5663-49a1-b883-4a989b75a61a
dotnet_naming_rule.types_and_namespaces_rule.import_to_resharper = as_predefined
dotnet_naming_rule.types_and_namespaces_rule.severity = suggestion
dotnet_naming_rule.types_and_namespaces_rule.style = pascal_schreibweise
dotnet_naming_rule.types_and_namespaces_rule.symbols = types_and_namespaces_symbols
dotnet_naming_style.all_upper_style.capitalization = all_upper
dotnet_naming_style.all_upper_style.word_separator = _
dotnet_naming_style.lower_camel_case_style.capitalization = camel_case
dotnet_naming_symbols.constants_symbols.applicable_accessibilities = public,internal,protected,protected_internal,private_protected
dotnet_naming_symbols.constants_symbols.applicable_kinds = field
dotnet_naming_symbols.constants_symbols.required_modifiers = const
dotnet_naming_symbols.event_symbols.applicable_accessibilities = *
dotnet_naming_symbols.event_symbols.applicable_kinds = event
dotnet_naming_symbols.interfaces_symbols.applicable_accessibilities = *
dotnet_naming_symbols.interfaces_symbols.applicable_kinds = interface
dotnet_naming_symbols.method_symbols.applicable_accessibilities = *
dotnet_naming_symbols.method_symbols.applicable_kinds = method
dotnet_naming_symbols.private_constants_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_constants_symbols.applicable_kinds = field
dotnet_naming_symbols.private_constants_symbols.required_modifiers = const
dotnet_naming_symbols.property_symbols.applicable_accessibilities = *
dotnet_naming_symbols.property_symbols.applicable_kinds = property
dotnet_naming_symbols.public_fields_symbols.applicable_accessibilities = public,internal,protected,protected_internal,private_protected
dotnet_naming_symbols.public_fields_symbols.applicable_kinds = field
dotnet_naming_symbols.static_readonly_symbols.applicable_accessibilities = public,internal,protected,protected_internal,private_protected
dotnet_naming_symbols.static_readonly_symbols.applicable_kinds = field
dotnet_naming_symbols.static_readonly_symbols.required_modifiers = static,readonly
dotnet_naming_symbols.types_and_namespaces_symbols.applicable_accessibilities = *
dotnet_naming_symbols.types_and_namespaces_symbols.applicable_kinds = namespace,class,struct,enum,delegate

# ReSharper properties
resharper_align_linq_query = true
resharper_align_multiline_argument = true
resharper_align_multiline_calls_chain = true
resharper_align_multiline_expression = true
resharper_align_multiline_extends_list = true
resharper_align_multiline_for_stmt = true
resharper_align_multline_type_parameter_constrains = true
resharper_align_multline_type_parameter_list = true
resharper_csharp_align_multiline_parameter = true
resharper_csharp_align_multiple_declaration = true
resharper_csharp_blank_lines_around_invocable = 3
resharper_csharp_blank_lines_around_namespace = 3
resharper_csharp_blank_lines_around_type = 3
resharper_csharp_empty_block_style = together
resharper_csharp_keep_blank_lines_in_code = 1
resharper_csharp_keep_blank_lines_in_declarations = 3
resharper_csharp_naming_rule.enum_member = AaBb, __ + AA_BB
resharper_csharp_naming_rule.event = AaBb
resharper_csharp_naming_rule.interfaces = I + AaBb
resharper_csharp_naming_rule.method = AaBb
resharper_csharp_naming_rule.property = AaBb
resharper_csharp_naming_rule.types_and_namespaces = AaBb
resharper_csharp_wrap_after_invocation_lpar = true
resharper_csharp_wrap_arguments_style = chop_if_long
resharper_csharp_wrap_chained_method_calls = chop_if_long
resharper_csharp_wrap_multiple_declaration_style = chop_always
resharper_csharp_wrap_parameters_style = chop_if_long
resharper_enforce_line_ending_style = true
resharper_indent_anonymous_method_block = true
resharper_keep_existing_embedded_arrangement = false
resharper_place_accessorholder_attribute_on_same_line = false
resharper_place_constructor_initializer_on_same_line = false
resharper_place_field_attribute_on_same_line = false
resharper_place_simple_embedded_statement_on_same_line = false
resharper_place_type_constraints_on_same_line = false
resharper_space_within_single_line_array_initializer_braces = false
resharper_use_indent_from_vs = false
resharper_wrap_before_invocation_rpar = true
resharper_wrap_chained_binary_expressions = chop_if_long

# ReSharper inspection severities
resharper_arrange_namespace_body_highlighting = hint
resharper_arrange_redundant_parentheses_highlighting = hint
resharper_arrange_type_member_modifiers_highlighting = hint
resharper_arrange_type_modifiers_highlighting = hint
resharper_built_in_type_reference_style_for_member_access_highlighting = hint
resharper_built_in_type_reference_style_highlighting = hint
resharper_inconsistent_naming_highlighting = suggestion

[*.{appxmanifest,asax,ascx,aspx,axaml,axml,build,config,cs,cshtml,csproj,css,dbml,discomap,dtd,htm,html,js,json,jsproj,jsx,lsproj,master,njsproj,nuspec,paml,proj,props,proto,razor,resjson,resw,resx,skin,StyleCop,targets,tasks,ts,tsx,vb,vbproj,xaml,xamlx,xml,xoml,xsd}]
indent_style = space
indent_size = 2
tab_width = 2
